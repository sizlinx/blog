{
    "version": "https://jsonfeed.org/version/1",
    "title": "sizlinx",
    "subtitle": null,
    "icon": "https://sizlinx.tk/blog/images/favicon.ico",
    "description": "Boooooooooom",
    "home_page_url": "https://sizlinx.tk/blog",
    "items": [
        {
            "id": "https://sizlinx.tk/blog/GRADUATE/",
            "url": "https://sizlinx.tk/blog/GRADUATE/",
            "title": "GRADUATE",
            "date_published": "2021-01-13T16:54:08.000Z",
            "content_html": "<p>2021-01-13 초등학교 졸업!</p>\n<p>할것:<br />\n책읽기<br />\n공부하기<br />\n컴퓨터하기<br />\netc</p>\n<p>앞으로 책읽은거 기록할예정</p>\n",
            "tags": []
        },
        {
            "id": "https://sizlinx.tk/blog/English-Monthly-Evaluation/",
            "url": "https://sizlinx.tk/blog/English-Monthly-Evaluation/",
            "title": "English-Monthly-Evaluation",
            "date_published": "2021-01-11T13:10:35.000Z",
            "content_html": "<h1 id=\"범위\"><a class=\"anchor\" href=\"#범위\">#</a> 범위</h1>\n<p>리딩</p>\n<ul>\n<li>1.2 ~ 3.1</li>\n</ul>\n<p>문법</p>\n<ul>\n<li>문장형식 ~ to부정사</li>\n</ul>\n<p>리딩</p>\n<ul>\n<li>단어 뜻 쓰기 10개</li>\n<li>숙어 뜻 쓰기 5개</li>\n<li>독해</li>\n<li>해석 2문장</li>\n</ul>\n<p>문법</p>\n<ul>\n<li>주관식 10개</li>\n</ul>\n<p><strong>1월 12일</strong></p>\n<h1 id=\"문법\"><a class=\"anchor\" href=\"#문법\">#</a> 문법</h1>\n<h2 id=\"01-문장의-형식\"><a class=\"anchor\" href=\"#01-문장의-형식\">#</a> 01 문장의 형식</h2>\n<h3 id=\"1형식\"><a class=\"anchor\" href=\"#1형식\">#</a> 1형식</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>주어+동사+(부사/부사구)</td>\n<td>He runs (fast)</td>\n</tr>\n<tr>\n<td>There/Here+동사+주어+(부사/부사구)</td>\n<td>There is a festival at my school</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2형식\"><a class=\"anchor\" href=\"#2형식\">#</a> 2형식</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>주어+be동사+주격보어(형용사/명사)</td>\n<td>He is handsome. / He is a teacher.</td>\n</tr>\n<tr>\n<td>주어+감각동사+주격보어(형용사)</td>\n<td>It may sound strange.</td>\n</tr>\n<tr>\n<td>주어+상태동사+주격보어(형용사)</td>\n<td>The city became famous.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"3형식\"><a class=\"anchor\" href=\"#3형식\">#</a> 3형식</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>주어+동사+목적어(명사)</td>\n<td>She loved the book.</td>\n</tr>\n<tr>\n<td>주어+동사+목적어(대명사)</td>\n<td>I honestly did’t understand that.</td>\n</tr>\n<tr>\n<td>주어+동사+목적어(to부정사구)</td>\n<td>We want to watch TV.</td>\n</tr>\n<tr>\n<td>주어+동사+목적어(동명사구)</td>\n<td>They enjoyed talking to each other.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>이때 to부정사구이냐 동명사구이냐는 동사에 따라 정해진다</strong></p>\n<ul>\n<li>\n<p>to부정사구만 되는것</p>\n<ul>\n<li>\n<p>want</p>\n</li>\n<li>\n<p>wish</p>\n</li>\n<li>\n<p>hope</p>\n</li>\n<li>\n<p>decide</p>\n</li>\n<li>\n<p>plan</p>\n</li>\n<li>\n<p>etc</p>\n</li>\n</ul>\n</li>\n<li>\n<p>동명사구만 되는것</p>\n<ul>\n<li>\n<p>tell</p>\n</li>\n<li>\n<p>encourage</p>\n</li>\n<li>\n<p>older</p>\n</li>\n<li>\n<p>get</p>\n</li>\n<li>\n<p>give up</p>\n</li>\n<li>\n<p>avoid</p>\n</li>\n<li>\n<p>allow</p>\n</li>\n<li>\n<p>want</p>\n</li>\n<li>\n<p>admit</p>\n</li>\n<li>\n<p>mind</p>\n</li>\n<li>\n<p>suggest</p>\n</li>\n</ul>\n</li>\n<li>\n<p>둘다 되는것</p>\n<ul>\n<li>like</li>\n<li>hate</li>\n<li>love</li>\n<li>start</li>\n<li>begin</li>\n<li>etc</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4형식\"><a class=\"anchor\" href=\"#4형식\">#</a> 4형식</h3>\n<table>\n<thead>\n<tr>\n<th>주어</th>\n<th>동사</th>\n<th>간접목적어 (I.O.) (~에게)</th>\n<th>직접목적어 (D.O.) (~을/를)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>I</td>\n<td>gave</td>\n<td>him</td>\n<td>a presend.</td>\n</tr>\n<tr>\n<td>She</td>\n<td>made</td>\n<td>me</td>\n<td>a cake.</td>\n</tr>\n<tr>\n<td>We</td>\n<td>asked</td>\n<td>her</td>\n<td>a question.</td>\n</tr>\n</tbody>\n</table>\n<p>3형식 문장으로 변환할경우</p>\n<table>\n<thead>\n<tr>\n<th>주어</th>\n<th>동사</th>\n<th>직접목적어</th>\n<th>전치사</th>\n<th>간접목적어</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>I</td>\n<td>gave</td>\n<td>a present</td>\n<td>to</td>\n<td>him.</td>\n</tr>\n<tr>\n<td>She</td>\n<td>made</td>\n<td>a cake</td>\n<td>for</td>\n<td>me.</td>\n</tr>\n<tr>\n<td>We</td>\n<td>asked</td>\n<td>a question</td>\n<td>of</td>\n<td>her.</td>\n</tr>\n</tbody>\n</table>\n<p>직접목적어와 간접목적어의 위치가 바뀌며 중간에 전치사가 들어가는데</p>\n<p><strong>이때 전치사의 종류는 동사에 따라 전해진다</strong></p>\n<ul>\n<li>to\n<ul>\n<li>give</li>\n<li>send</li>\n<li>show</li>\n<li>etc</li>\n</ul>\n</li>\n<li>for\n<ul>\n<li>make</li>\n<li>buy</li>\n<li>cook</li>\n<li>get</li>\n<li>find</li>\n</ul>\n</li>\n<li>of\n<ul>\n<li>ask</li>\n<li>require</li>\n<li>inquire</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5형식\"><a class=\"anchor\" href=\"#5형식\">#</a> 5형식</h3>\n<table>\n<thead>\n<tr>\n<th>주어</th>\n<th>동사</th>\n<th>목적어</th>\n<th>목적격보어 (== 목적어)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Mom</td>\n<td>calls</td>\n<td>me</td>\n<td>a pig. (명사)</td>\n</tr>\n<tr>\n<td>I</td>\n<td>found</td>\n<td>this book</td>\n<td>interesting. (형용사)</td>\n</tr>\n</tbody>\n</table>\n<p><strong>단, 목적격 보어 자리에는 부사가 들어갈 수 없다. <strong>부사는 문장성분이 아니기 때문이다.</strong></strong></p>\n<h4 id=\"목적격-보어로-to부정사가-오는-경우\"><a class=\"anchor\" href=\"#목적격-보어로-to부정사가-오는-경우\">#</a> 목적격 보어로 to부정사가 오는 경우</h4>\n<table>\n<thead>\n<tr>\n<th>주어</th>\n<th>동사</th>\n<th>목적어</th>\n<th>목적격 보어 (to부정사)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>I</td>\n<td>want</td>\n<td>you</td>\n<td>to study hard.</td>\n</tr>\n<tr>\n<td>Mom</td>\n<td>asked</td>\n<td>me</td>\n<td>to lock the door.</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"목적격보어로-동사원형이-오는-경우\"><a class=\"anchor\" href=\"#목적격보어로-동사원형이-오는-경우\">#</a> 목적격보어로 동사원형이 오는 경우</h4>\n<table>\n<thead>\n<tr>\n<th>주어</th>\n<th>동사</th>\n<th>목적어</th>\n<th>목적격 보어 (동사원형)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Our teacher</td>\n<td>made (사역)</td>\n<td>us</td>\n<td>study hard.</td>\n</tr>\n<tr>\n<td>Mom</td>\n<td>had (사역)</td>\n<td>me</td>\n<td>do the dishes.</td>\n</tr>\n<tr>\n<td>She</td>\n<td>saw (지각)</td>\n<td>him</td>\n<td>play the game.</td>\n</tr>\n<tr>\n<td>I</td>\n<td>heard (지각)</td>\n<td>the monsters</td>\n<td>scream loudly.</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"사역동사와-지각동사\"><a class=\"anchor\" href=\"#사역동사와-지각동사\">#</a> 사역동사와 지각동사</h4>\n<p>사역동사</p>\n<ul>\n<li>made</li>\n<li>have</li>\n<li>let</li>\n</ul>\n<p>지각동사</p>\n<ul>\n<li>see</li>\n<li>watch</li>\n<li>feel</li>\n<li>touch</li>\n<li>hear</li>\n<li>etc</li>\n</ul>\n<p><strong>지각동사는 목적격보어를 동사원형 또는 현재분사 (+ing) 로 쓸 수 있다</strong></p>\n<h5 id=\"준사역동사\"><a class=\"anchor\" href=\"#준사역동사\">#</a> 준사역동사</h5>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>주어+help+목적어+(to)+동사원형</td>\n<td>I helped him (to) repair the car.</td>\n</tr>\n<tr>\n<td>주어+get+목적어+to+동사원형</td>\n<td>I will get her to water the plants.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>동사가 help 라면 동사원형 앞에 to 를 붙일 수 있고 동사가 get 이라면 to 를 붙여야한다.</strong></p>\n<h5 id=\"목적격-보어가-과거분사pp인-경우\"><a class=\"anchor\" href=\"#목적격-보어가-과거분사pp인-경우\">#</a> 목적격 보어가 과거분사(p.p)인 경우</h5>\n<pre><code>주어+지각동사/사역동사+목적어+과거분사\n</code></pre>\n<ul>\n<li>She heard her name called.</li>\n<li>I had the box carried by some boys.</li>\n</ul>\n<h2 id=\"to부정사\"><a class=\"anchor\" href=\"#to부정사\">#</a> to부정사</h2>\n<h3 id=\"명사적-용법\"><a class=\"anchor\" href=\"#명사적-용법\">#</a> 명사적 용법</h3>\n<table>\n<thead>\n<tr>\n<th>역할</th>\n<th>뜻</th>\n<th>예문</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>주어</td>\n<td>~하는 것은</td>\n<td>To finish the work now is necessary</td>\n</tr>\n<tr>\n<td>보어</td>\n<td>~하는 것이다</td>\n<td>His job was to repair toy cars.</td>\n</tr>\n<tr>\n<td>목적어</td>\n<td>~하는 것을</td>\n<td>I want to ride my bicycle.</td>\n</tr>\n</tbody>\n</table>\n<pre><code>의문사+to부정사 = 의문사+주어+should+동사원형\n</code></pre>\n<ol>\n<li>He did’t know what to do next</li>\n<li>He did’t know what he should do next.</li>\n</ol>\n<h3 id=\"형용사적-용법\"><a class=\"anchor\" href=\"#형용사적-용법\">#</a> 형용사적 용법</h3>\n<table>\n<thead>\n<tr>\n<th>역할</th>\n<th>뜻</th>\n<th>예문</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>명사수식</td>\n<td>~하는 / ~할</td>\n<td>He’s not a person to tell a lie.</td>\n</tr>\n<tr>\n<td>대명사 수식</td>\n<td>~ 하는 / ~할</td>\n<td>I have something important to tell you.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"부사적-용법\"><a class=\"anchor\" href=\"#부사적-용법\">#</a> 부사적 용법</h3>\n<table>\n<thead>\n<tr>\n<th>역할</th>\n<th>뜻</th>\n<th>예문</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>목적</td>\n<td>~하기 위해</td>\n<td>The children ran to catch the rabbit.</td>\n</tr>\n<tr>\n<td>감정의 원인</td>\n<td>~해서</td>\n<td>We were very surprised to hear that.</td>\n</tr>\n<tr>\n<td>판단의 근거</td>\n<td>~하다니</td>\n<td>Your son must be crazy to say that.</td>\n</tr>\n<tr>\n<td>결과</td>\n<td>~해서 (결국) …하다</td>\n<td>The boy grew up to be a racing driver.</td>\n</tr>\n<tr>\n<td>형용사/부사 수식</td>\n<td>~하기에</td>\n<td>Your handwriting is hard to read.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"의미상의-주어\"><a class=\"anchor\" href=\"#의미상의-주어\">#</a> 의미상의 주어</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>일반 형용사</td>\n<td>easy, difficult, hard, necessary, possible, impossible, interesting, imporant, etc</td>\n<td>for + 목적격</td>\n</tr>\n<tr>\n<td>성품 형용사</td>\n<td>kind, nice, foolish, stupid, polite, rude, careful, careless, brave, wise, silly</td>\n<td>of + 목걱격</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>There is no money for you to spend.</li>\n<li>It was wise of you to refuse his offer.</li>\n</ul>\n<h3 id=\"to부정사의-부정\"><a class=\"anchor\" href=\"#to부정사의-부정\">#</a> to부정사의 부정</h3>\n<pre><code class=\"language-english\">not [never] to + 동사원형\n</code></pre>\n<ul>\n<li>We walked fast not to be late for the class.</li>\n<li>She got up early in order not to miss the school bus.</li>\n</ul>\n<h3 id=\"too-~to-와-enough-to\"><a class=\"anchor\" href=\"#too-~to-와-enough-to\">#</a> too ~to 와 enough to</h3>\n<table>\n<thead>\n<tr>\n<th>too ~to</th>\n<th>~ enough to</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>so + 형용사 + that + 주어 + cannot (과거 =&gt; couldn’t)</td>\n<td>so + 형용사 + that + 주어 + can</td>\n</tr>\n<tr>\n<td>너무 ~해서 ~할 수 없는</td>\n<td>~할 정도로 충분히 ~한</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>I am too tired to help you. =&gt; I am so tired that I can’t help you.</li>\n<li>Minhee was strong enough to carry the desk. =&gt; Minhee was so strong that she could carry the desk.</li>\n</ul>\n<p>문법 정리 끝</p>\n",
            "tags": [
                "English",
                "first"
            ]
        },
        {
            "id": "https://sizlinx.tk/blog/Arch-install/",
            "url": "https://sizlinx.tk/blog/Arch-install/",
            "title": "Arch-install",
            "date_published": "2021-01-08T22:51:17.000Z",
            "content_html": "<p>나혼자 보려고 만든 아치 설치 가이드</p>\n<a id=\"more\"></a>\n<h2 id=\"부팅-usb-생성\"><a class=\"anchor\" href=\"#부팅-usb-생성\">#</a> 부팅 USB 생성</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2Z0cC5oYXJ1a2FzYW4ub3JnL2FyY2hsaW51eC9pc28vMjAyMS4wMS4wMS8=\">ftp.harukasan.org</span></p>\n<p>에서 iso 파일 다운</p>\n<p>하고 Etcher 이나 Rufus 등을 이용해 usb 를 구워준다.</p>\n<h2 id=\"usb-를-uefi-로-부팅\"><a class=\"anchor\" href=\"#usb-를-uefi-로-부팅\">#</a> USB 를 UEFI 로 부팅</h2>\n<p>바이오스에서 부팅 설정 바꾸고 UEFI 로 부팅한다.<br />\n<img data-src=\"https://miro.medium.com/max/3520/1*a97mF5axrhWKbas_P1NmxQ.png\" alt=\"isuefi\" /></p>\n<p>왼쪽이 uefi, 오른쪽이 바이오스다.</p>\n<h2 id=\"파티션-설정\"><a class=\"anchor\" href=\"#파티션-설정\">#</a> 파티션 설정</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>lsblk</pre></td></tr></table></figure><p>로 깔고싶은 파티션을 정한다.</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cfdisk</span> /dev/<span class=\"token punctuation\">[</span>아치리눅스를 깔 파티션<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>loop, sdb, sr0 같은건 건드리지 말자.</p>\n<p>cfdisk 를 실행하고 나면 맨 위에 GPT 라고 나와있어야한다. 아니면 맨 처음에 물어볼텐데 GPT 하고</p>\n<p>primary 어쩌구 나오면 primary 선택하면 된다.</p>\n<p>아래 메뉴를 방향키로 움직일 수 있다. New 에서 엔터를 치고 위에서부터 순서대로 1G, 4G, 나머지G (자동) 을 적고 엔터친다.</p>\n<p>아래 메뉴에서 Type 으로 위에서부터</p>\n<p>EFI System</p>\n<p>Linux swap</p>\n<p>Linux filesystem</p>\n<p>을 선택한다.</p>\n<table>\n<thead>\n<tr>\n<th>Device</th>\n<th>Size Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>/dev/sda1</td>\n<td>1G EFI System</td>\n</tr>\n<tr>\n<td>/dev/sda2</td>\n<td>4G Linux swap</td>\n</tr>\n<tr>\n<td>/dev/sda3</td>\n<td>전체 - 5G Linux filesystem</td>\n</tr>\n</tbody>\n</table>\n<p>그러면 대충 이런 모양이 나올거다</p>\n<p>Write 에 가서 엔터, yes 를 치고 q 로 나온다,</p>\n<p><strong>주의: Write 하면 되돌릴 수 없다</strong></p>\n<h2 id=\"포맷\"><a class=\"anchor\" href=\"#포맷\">#</a> 포맷</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mkfs.vfat -F32 /dev/<span class=\"token punctuation\">[</span>EFI 시스템 파티션<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>mkfs.ext4 -j /dev/<span class=\"token punctuation\">[</span>파일시스템 파티션<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">mkswap</span> /dev/<span class=\"token punctuation\">[</span>스왑 파티션<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">swapon</span> /dev/<span class=\"token punctuation\">[</span>스왑 파티션<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h2 id=\"마운트\"><a class=\"anchor\" href=\"#마운트\">#</a> 마운트</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mount</span> /dev/<span class=\"token punctuation\">[</span>파일시스템 파티션<span class=\"token punctuation\">]</span> /mnt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">mkdir</span> /mnt/boot</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">mount</span> /dev/<span class=\"token punctuation\">[</span>EFI 시스템 파티션<span class=\"token punctuation\">]</span> /mnt/boot</pre></td></tr></table></figure><h2 id=\"미러-설정\"><a class=\"anchor\" href=\"#미러-설정\">#</a> 미러 설정</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nano</span> /etc/pacman.d/mirrorlist</pre></td></tr></table></figure><p>Server = 어쩌구 로 시작하는곳 윗줄에</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Server <span class=\"token operator\">=</span> http://ftp.harukasan.org/archlinux/<span class=\"token variable\">$repo</span>/os/<span class=\"token variable\">$arch</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Server <span class=\"token operator\">=</span> https://ftp.harukasan.org/archlinux/<span class=\"token variable\">$repo</span>/os/<span class=\"token variable\">$arch</span></pre></td></tr></table></figure><p>를 적는다. ctrl + x, y, 엔터로 빠져나온다.</p>\n<h2 id=\"인터넷-연결\"><a class=\"anchor\" href=\"#인터넷-연결\">#</a> 인터넷 연결</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>iwctl</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>station wlan0 scan</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>station wlan0 connect <span class=\"token punctuation\">[</span>연결할 네트워크 이름<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">exit</span></pre></td></tr></table></figure><p>[iwd] 에서 빠져나와서</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ping</span> -c <span class=\"token number\">3</span> <span class=\"token number\">8.8</span>.8.8</pre></td></tr></table></figure><p>해서 연결된거같으면 완료</p>\n<h2 id=\"기본-패키지-설치\"><a class=\"anchor\" href=\"#기본-패키지-설치\">#</a> 기본 패키지 설치</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pacstrap /mnt base base-devel linux linux-firmware <span class=\"token function\">nano</span> networkmanager <span class=\"token function\">git</span> <span class=\"token function\">curl</span> <span class=\"token function\">wget</span> <span class=\"token function\">vim</span></pre></td></tr></table></figure><p>따로 다운받고 싶은게 있다면 뒤에 프로그램 이름을 추가하면 된다.</p>\n<h2 id=\"genfstab\"><a class=\"anchor\" href=\"#genfstab\">#</a> genfstab</h2>\n<p><strong>genfstab : generate File System table</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>genfstab -U /mnt <span class=\"token operator\">>></span> /mnt/etc/fstab</pre></td></tr></table></figure><h2 id=\"루트로-아치리눅스-진입\"><a class=\"anchor\" href=\"#루트로-아치리눅스-진입\">#</a> 루트로 아치리눅스 진입</h2>\n<p><strong>arch-change root</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>arch-chroot /mnt</pre></td></tr></table></figure><h2 id=\"locale-설정\"><a class=\"anchor\" href=\"#locale-설정\">#</a> locale 설정</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vim</span> /etc/locale.gen</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># en_US.UTF-8 앞에 주석을 없앤다</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">LANG</span></span><span class=\"token operator\">=</span>en_US.UTF-8 <span class=\"token operator\">></span> /etc/locale.conf</pre></td></tr></table></figure><h2 id=\"시간-설정\"><a class=\"anchor\" href=\"#시간-설정\">#</a> 시간 설정</h2>\n<p>시간설정은 설치 다 하고</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>timedatectl set-ntp <span class=\"token boolean\">true</span></pre></td></tr></table></figure><p>로 동기화 시킬 수 있으니 패스</p>\n<h2 id=\"기기-시간-설정\"><a class=\"anchor\" href=\"#기기-시간-설정\">#</a> 기기 시간 설정</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hwclock --systohc --utc</pre></td></tr></table></figure><h2 id=\"로컬-시간-설정\"><a class=\"anchor\" href=\"#로컬-시간-설정\">#</a> 로컬 시간 설정</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ln</span> -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime</pre></td></tr></table></figure><p>서울 시간으로 맞춘다</p>\n<h2 id=\"사용자-추가\"><a class=\"anchor\" href=\"#사용자-추가\">#</a> 사용자 추가</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">useradd</span> -m -g <span class=\"token function\">users</span> -G wheel -s /bin/bash 유저 이름</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">EDITOR</span><span class=\"token operator\">=</span>vim visudo</pre></td></tr></table></figure><p>하면 나오는 창에서</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#%wheel ALL=(ALL) ALL</span></pre></td></tr></table></figure><p>만 주석을 풀어준다.</p>\n<h2 id=\"비밀번호-설정\"><a class=\"anchor\" href=\"#비밀번호-설정\">#</a> 비밀번호 설정</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">passwd</span> <span class=\"token punctuation\">[</span>유저이름<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">passwd</span></pre></td></tr></table></figure><h2 id=\"컴퓨터-이름-설정\"><a class=\"anchor\" href=\"#컴퓨터-이름-설정\">#</a> 컴퓨터 이름 설정</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">echo</span> 컴퓨터이름 <span class=\"token operator\">></span> /etc/hostname</pre></td></tr></table></figure><h2 id=\"부팅설정\"><a class=\"anchor\" href=\"#부팅설정\">#</a> 부팅설정</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bootctl --path<span class=\"token operator\">=</span>/boot <span class=\"token function\">install</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">vim</span> /boot/loader/loader.conf</pre></td></tr></table></figure><p>vim 창에서는 a 를 눌러서 insert 로 전환해서 다 지우고</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>default arch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>editor <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">timeout</span> <span class=\"token number\">0</span></pre></td></tr></table></figure><p>이 되게 만든다.</p>\n<p>esc/ctrl+[ + :wq 로 저장한다.</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vim</span> /boot/loader/entries/arch.conf</pre></td></tr></table></figure><p>를</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>title ArchLinux</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>linux /vmlinuz-linux</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>initrd /initramfs-linux.img</pre></td></tr></table></figure><p>저장하고 빠져나온 후</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"options root=PARTUUID=<span class=\"token variable\"><span class=\"token variable\">$(</span>blkid -s PARTUUID -o value /dev/<span class=\"token punctuation\">[</span>파일 시스템 위치<span class=\"token punctuation\">]</span><span class=\"token variable\">)</span></span> rw\"</span><span class=\"token operator\">>></span> /boot/loader/entries/arch.conf</pre></td></tr></table></figure><p>를 하고</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> /boot/loader/entries/arch.conf</pre></td></tr></table></figure><p>로 확인해서</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>title ArchLinux</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>linux /vmlinuz-linux</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>initrd /initramfs-linux.img</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>options <span class=\"token assign-left variable\">root</span><span class=\"token operator\">=</span>PARTUUID<span class=\"token operator\">=</span>아이디 rw</pre></td></tr></table></figure><p>가 되어있으면 된다.</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl <span class=\"token builtin class-name\">enable</span> NetworkManager</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">umount</span> -R /mnt</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">reboot</span></pre></td></tr></table></figure><p>설치 끝</p>\n",
            "tags": [
                "Linux",
                "Arch install"
            ]
        },
        {
            "id": "https://sizlinx.tk/blog/add-cplayer/",
            "url": "https://sizlinx.tk/blog/add-cplayer/",
            "title": "add-cplayer",
            "date_published": "2021-01-08T03:23:55.000Z",
            "content_html": "<p>cplayer 추가</p>\n<p><a id=\"more\"></a></p>\n<h2 id=\"cplayer\"><a class=\"anchor\" href=\"#cplayer\">#</a> Cplayer</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL01vZVBsYXllci9jUGxheWVy\">Github</span></p>\n<p>\n    <div id=\"cplayer-02100061\"></div>\n    <script>\n      (function(){\n        function loadcplayer() {\n          if (typeof window.cplayerList === 'undefined') window.cplayerList = {};\n          if (typeof window.cplayerList[\"cplayer-02100061\"] !== 'undefined') return;\n          if (!cplayer.prototype.add163) cplayer.prototype.add163 = function add163(id) {\n            if (!id) throw new Error(\"Unable Property.\");\n            return fetch(\"https://music.huaji8.top/?id=\" + id).then(function(res){return res.json()}).then(function(data){\n              let obj = {\n                name: data.info.songs[0].name,\n                artist: data.info.songs[0].ar.map(function(ar){ return ar.name }).join(','),\n                poster: data.pic.url,\n                lyric: data.lyric.lyric,\n                sublyric: data.lyric.tlyric,\n                src: data.url.url\n              }\n              this.add(obj);\n              return obj;\n            }.bind(this))\n          }\n\n          window.cplayerList[\"cplayer-02100061\"] = new cplayer({\n            element: document.getElementById(\"cplayer-02100061\"),\n            playlist: [{\"name\":\"병만스\",\"artist\":\"병만로이드\",\"poster\":\"https://i.ytimg.com/vi/Rf_bnvOUsFY/mqdefault.jpg\",\"src\":\"https://cdn.trinets.xyz/d/_8p20aszYm.mpga\"}],\n            generateBeforeElement: true,\n            deleteElementAfterGenerate: true,\n            autoplay: true\n          });\n\n          \n        }\n        \n        if (typeof window.cplayer === 'undefined' && !document.getElementById(\"cplayer-script\")) {\n          var js = document.createElement(\"script\");\n          js.src = 'https://cdn.jsdelivr.net/gh/MoePlayer/cPlayer/dist/cplayer.js';\n          js.id = \"cplayer-script\";\n          js.addEventListener(\"load\", loadcplayer);\n          document.body.appendChild(js);\n        } else {\n          window.addEventListener(\"load\", loadcplayer);\n        }\n      })()\n    </script>\n\t</p>\n",
            "tags": [
                "music-player"
            ]
        },
        {
            "id": "https://sizlinx.tk/blog/helloworld/",
            "url": "https://sizlinx.tk/blog/helloworld/",
            "title": "helloworld",
            "date_published": "2021-01-07T13:06:29.000Z",
            "content_html": "<p>hexo 블로그 개설!</p>\n<p><a id=\"more\"></a></p>\n<p>nexmoe 테마가 중국어라서 좀 바꿀거다.</p>\n",
            "tags": [
                "잡담",
                "first"
            ]
        }
    ]
}